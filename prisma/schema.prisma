// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  username      String    @unique
  passwordHash  String?
  name          String?
  bio           String?
  address       String?
  phoneNumber   String?
  oauthProvider String?
  oauthId       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  products      Product[]
  favorites     Favorite[]
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
}

model Product {
  id          String         @id @default(uuid())
  sellerId    String
  seller      User           @relation(fields: [sellerId], references: [id])
  categoryId  String    
  category    categories     @relation(fields: [categoryId], references: [id])
  title       String
  description String
  price       Decimal        @db.Decimal(10, 2)
  latitude    Float
  longitude   Float
  address     String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  images      ProductImage[]
  favorites   Favorite[]
  messages    Message[]
}


model categories {
  id          String         @id @default(uuid())
  name        String         @unique
  products    Product[]

}

model ProductImage {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  imageUrl  String
  order     Int
  isPrimary Boolean
  createdAt DateTime @default(now())
}

model Favorite {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, productId])
}

model Message {
  id         String   @id @default(uuid())
  senderId   String
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiverId String
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  content    String
  sentAt     DateTime @default(now())
}